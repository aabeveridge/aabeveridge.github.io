<a href="http://imgur.com/MdMZu2A"><img src="http://i.imgur.com/MdMZu2A.jpg" title="source: imgur.com" /></a>    [Intro](https://aaronbev79.github.io/markdown_intro.html)//[Theory](https://aaronbev79.github.io/markdown_theory.html)//[History](https://aaronbev79.github.io/markdown_history.html)//[Examples](https://aaronbev79.github.io/markdown_examples.html)//[Resources](https://aaronbev79.github.io/markdown_resources.html)

##A Brief History of Markdown's Development

A Brief History of Markdown's Development
Markdown was created and released in 2004 by Mark Gruber, but the history of its development is important to understanding the potential of the Markdown movement. While open source software development often strives to be collaborative and transparent, that does not mean the process occurs without friction or disputes among developers. Markdown fractured and expanded so quickly over the first 5 years that many developers began to call for work to standardize its syntax. In 2009 Jeff Atwood, co-founder of stackoverflow.com, wrote on his personal blog a scathing critique of John Gruber’s oversight of Markdown and he titled the post: “Responsible Open Source Code Parenting.” Atwood, showing his frustration with Gruber, explains: “It's almost at the point where John Gruber, the very person who brought us Markdown, is the biggest obstacle preventing Markdown from moving forward and maturing. It saddens me greatly to see such negligent open source code parenting. Why work against the community when you can work with it? It doesn't have to be this way. And it shouldn't be.” Atwood’s role in the history of Markdown is relevant to writing studies because Atwood is a writer--maintaining his programming blog codinghorror.com since 2004--and his primary projects as a developer have all been discursive writing technologies. Stackoverflow.com is the largest programming discussion site on the Internet--providing a forum for users to quickly ask and answer technical questions about programming--and his newest project discourse.org is an open source project that attempts the lofty goal of improving Internet discourse through technological innovation. Therefore, the following history of Markdown not only provides a perspective of its development and its multifaceted utility, but it provides a meaningful lesson in the open source, collaborative development of writing technology. 

In 2008 Atwood writes a post on his blog titled: “Is HTML a Humane Markup Language?” The post explains stackoverflow's decision to use Markdown for posting questions on the site, but it also explains the crucial impetus for the Markdown movement. As a site for programmers to discuss technical questions regarding code and software development, Atwood explains why they decided not to provide a simple GUI (graphical user interface) WYSIWYG editor for users to post questions to the site: “I have one iron-clad design guide: this is a site for programmers, so they should be comfortable with basic markup.” Atwood argues that if “you can sling code, a little bit of presentation markup is child's play.” The core question Atwood investigates with his post is why Stack Overflow chose Markdown over HTML and other lightweight markup languages. What is particularly intriguing about this post, for writing studies, is Atwood's audience and his rationale for using Markdown based on that audience. Given that stackoverflow's user-base is programmers, he is able to assume a much higher technical knowledge and a minimum set of coding skills that other sites or organizations cannot assume. Atwood explains significant positive Wikipedia's influence on stackoverflow, but he follow this with a critique of Wikipedia's own markup language:

>It's an effective markup language, but I think you'll agree that it's more intimidating than 	humane. […] I'd argue that writing a Wikipedia entry is a step beyond mere presentational markup; it's almost like coding, as you weave the article into the Wikipedia gestalt. (Incidentally, if you haven't ever edited a Wikipedia article, you should. I consider it a rite of passage, a sort of internet merit badge for anyone who is serious about their online presence.) 

What becomes clear in Atwood's 2008 post is that stackoverflow wants to provide users with some measure of control over design through an in-text lightweight markup language, but the pragmatics of writing in a fully-coded environment remove the ease-of-production users expect from WYSIGYG type writing environments.Certainly, Atwood's user-base at stackoverflow is significantly more tech-savvy than most of the students in college writing classrooms, yet he seems to acknowledge the same problem investigated by Mauriello et al. in “Reading between the Code” and Arola in “The Design of Web 2.0”—giving over to WYSIWYG altogether means users give up too much control over design and layout, but expecting writers to always code in full HTML or something like Wikipedia's markup syntax provides what Atwood calls an “inhumane” writing experience.     

Markdown attempts to bridge this gap by providing a limited set of syntax conventions without becoming a full-blown language of its own. The question is where do developers of Markdown draw the line? The problem posed by this question is what led to the friction between Atwood and Gruber. In 2012 Atwood writes a post titled “The Future of Markdown” in which he  implores Gruber to support a standardization effort for Markdown's open source development: “So I'm asking you, John Gruber: as the original creator of Markdown, will you bless this endeavor?” Atwood explains the importance of the work to standardize Markdown:

>I freaking love Markdown. I love it so much that I want to see it succeed and flourish over the next 20 years. I believe the best way to achive that goal is for the most popular sites using Markdown to band together and take ownership of Markdown as a standard. I propose that Stack Exchange, GitHub, Meteor, Reddit, and any other company with lots of traffic and a strategic investment in Markdown, all work together to come up with an official Markdown specification, and standard test suites to validate 	Markdown implementations. We've all been working at cross purposes for too long, 	accidentally fragmenting Markdown while popularizing it.
 
If Markdown is more movement than innovation, as this article suggests, than Atwood is its key motivator. The closing lines of his 2012 post are a call to action: “I'd really prefer not to fork the language; I'd much rather collectively help carry the banner of Markdown forward into the future, with the blessing of John Gruber and in collaboration with other popular sites that use Markdown. So … who's with me?”
	
Before continuing the story of Markdown's development, it is important to weave into this narrative the development of an adjacent tool called Pandoc. Markdown always requires a conversion utility. Gruber's original Markdown worked in conjunction within a Ruby parser that converts Markdown syntax to HTML. However, Pandoc converts Markdown into thirty-six other file formats, including: DOCX, PDF, HTML, RTF, ODT, EPUB. While using Markdown within a single web application like stackoverflow provides a meaningful case for examining its initial development, Markdown's true potential, examined in further detail in the final section of this article, is realized through the functionality provided by Pandoc. John MacFarlane, chair of the Department of Philosophy at UC Berkley, started to develop Pandoc in 2006 as an open source tool for broad scale document conversion. Recently, R Studio (the software development environment for the R statistical language—the largest open source programming language for statistical research and data mining) picked up Pandoc as the internal conversion utility for R Markdown mode. Markdown mode in R Studio allows users to seamlessly move from coding to writing—with the goal of providing a complete coding and writing infrastructure for reproducible research. While Markdown will never replace LaTeX (Pandoc uses LaTeX to convert Markdown to PDF format), the functionality provided by Pandoc's conversion utility provides Markdown users with a far greater range of possibilities. Another example use of Pandoc and Markdown was explained on the ProfHacker blog in The Chronicle of Higher Education. The blog post titled “Make Your Own E-Books with Pandoc” uses less than one-thousand words to explain how to use Markdown files and Pandoc to compile an ebook in EPUB format. While Pandoc makes all of this possible by broadly converting Markdown, it is important to note that Pandoc has its own variation of Markdown. With yet another variation in Markdown syntax provided by Pandoc's own version of Markdown, this reiterates the necessity of Atwood's call-to-action for standardizing variations of Markdown.
	
On the September 3rd of 2014 Atwood announced on his blog that he is working with a group with representatives from Reddit, GitHub, Stack Exchange (owners of stackoverflow), and Meteor (open source mobile development platform) to release standard Markdown specification for ongoing and future variations of Markdown. What is most exciting about this announcement is that most of the spec for Markdown is written by Pandoc's John MacFarlane. The group placed the spec at www.standardmarkdown.com, and it appeared to be a monumental success in the Markdown movement. However, three days later on September 5th, Atwood posted a follow-up announcing a change from www.standardmarkdown.com to www.commonmark.org following an angry email from John Gruber. Atwood explains in the follow-up that he emailed Gruber asking him to be part of the standardization team back in 2012, and Gruber never responded to the email. And then, again in August of 2014 Gruber was asked if he would provide feedback on the standardized Markdown spec before they released it to the public, and Gruber yet again did not respond according to Atwood. In the follow-up post, Atwood goes out of his way to apologize to Gruber and once again give him credit for creating Markdown, but if you go to www.standardmarkdown.com a single line remains showing Atwood's frustration with Gruber: “This domain was disabled at the request of John Gruber.” Atwood could have disabled the domain altogether, but instead that single line links back to his follow-up blog post explaining Gruber's lack of involvement. 
